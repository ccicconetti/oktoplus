syntax = "proto3";

import "types.proto";

package oktoplus.commands;

service Interface {
  rpc listPushFront(ListPushRequest)           returns (ListPushReply)     { }  // LPUSH
  rpc listPushBack(ListPushRequest)            returns (ListPushReply)     { }  // RPUSH
  rpc listPopFront(ListGetValueRequest)        returns (ListGetValueReply) { }  // LPOP
  rpc listPopBack(ListGetValueRequest)         returns (ListGetValueReply) { }  // RPOP
  rpc listLength(ListLengthRequest)            returns (ListLengthReply)   { }  // LLEN
                                                                                // BLPOP
                                                                                // BRPOP
                                                                                // BRPOPLPUSH
  rpc listIndex(IndexRequest)                  returns (ListGetValueReply) { }  // LINDEX
  rpc listInsert(ListInsertRequest)            returns (ListInsertReply)   { }  // LINSERT
  rpc listExistPushFront(ListPushRequest)      returns (ListPushReply)     { }  // LPUSHX
  rpc listRange(RangeRequest)                  returns (RangeReply)        { }  // LRANGE
  rpc listRemove(RemoveRequest)                returns (RemoveReply)       { }  // LREM
  rpc listSet(SetRequest)                      returns (SetReply)          { }  // LSET
  rpc listTrim(TrimRequest)                    returns (TrimReply)         { }  // LTRIM
  rpc listPopBackPushFront(ListPopPushRequest) returns (ListPopPushReply)  { }  // RPOPLPUSH
  rpc listExistPushBack(ListPushRequest)       returns (ListPushReply)     { }  // RPUSHX
  //////////////////////////////////////////////////////////////

}

//////////////////////////////////////////////////////

message ListPushRequest {
  string name            = 1;
  repeated string values = 2;
}

message ListPushReply {
  ResultInfo info = 1;
  uint64     size = 2;
}

//////////////////////////////////////////////////////

message ListGetValueRequest {
  string name = 1;
}

message ListGetValueReply {
  ResultInfo info  = 1;
  string     value = 2;
}

//////////////////////////////////////////////////////

message ListLengthRequest {
  string name = 1;
}

message ListLengthReply {
  ResultInfo info  = 1;
  uint64     value = 2;
}

//////////////////////////////////////////////////////

message IndexRequest {
  string name  = 1;
  int64  index = 2;
}

//////////////////////////////////////////////////////

message ListInsertRequest {
  enum Position {
    BEFORE          = 0;
    AFTER           = 1;
  }

  string   name     = 1;
  Position position = 2;
  string   pivot    = 3;
  string   value    = 4;
}

message ListInsertReply {
  ResultInfo info  = 1;
  int64      size  = 2;
}

//////////////////////////////////////////////////////

message RangeRequest {
  string name  = 1;
  int64  start = 2;
  int64  stop  = 3;
}

message RangeReply {
  ResultInfo      info   = 1;
  repeated string values = 2;
}

//////////////////////////////////////////////////////

message RemoveRequest {
  string name  = 1;
  int64  count = 2;
  string value = 3;
}

message RemoveReply {
  ResultInfo info    = 1;
  int64      removed = 2;
}

//////////////////////////////////////////////////////

message SetRequest {
  string name  = 1;
  int64  index = 2;
  string value = 3;
}

message SetReply {
  ResultInfo info = 1;
}

//////////////////////////////////////////////////////

message TrimRequest {
  string name  = 1;
  int64  start = 2;
  int64  stop  = 3;
}

message TrimReply {
  ResultInfo info = 1;
}

//////////////////////////////////////////////////////

message ListPopPushRequest {
  string source_name      = 1;
  string destination_name = 2;
}

message ListPopPushReply {
  ResultInfo info  = 1;
  string     value = 2;
}
