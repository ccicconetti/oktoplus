syntax = "proto3";

import "types.proto";

package okts.commands;

service Interface {
  // LIST
  rpc listPushFront(PushRequest)               returns (PushReply)     { }  // LPUSH
  rpc listPushBack(PushRequest)                returns (PushReply)     { }  // RPUSH
  rpc listPopFront(GetValueRequest)            returns (GetValueReply) { }  // LPOP
  rpc listPopBack(GetValueRequest)             returns (GetValueReply) { }  // RPOP
  rpc listLength(LengthRequest)                returns (LengthReply)   { }  // LLEN
                                                                            // BLPOP
                                                                            // BRPOP
                                                                            // BRPOPLPUSH
  rpc listIndex(IndexRequest)                  returns (GetValueReply) { }  // LINDEX
  rpc listInsert(InsertRequest)                returns (InsertReply)   { }  // LINSERT
  rpc listExistPushFront(PushRequest)          returns (PushReply)     { }  // LPUSHX
  rpc listRange(RangeRequest)                  returns (RangeReply)    { }  // LRANGE
  rpc listRemove(RemoveRequest)                returns (RemoveReply)   { }  // LREM
  rpc listSet(SetRequest)                      returns (SetReply)      { }  // LSET
  rpc listTrim(TrimRequest)                    returns (TrimReply)     { }  // LTRIM
  rpc listPopBackPushFront(PopPushRequest)     returns (PopPushReply)  { }  // RPOPLPUSH
  rpc listExistPushBack(PushRequest)           returns (PushReply)     { }  // RPUSHX

  //////////////////////////////////////////////////////////////

  // VECTOR
  rpc vectorPushBack(PushRequest)              returns (PushReply)     { }  // RPUSH
  rpc vectorPopBack(GetValueRequest)           returns (GetValueReply) { }  // RPOP
  rpc vectorLength(LengthRequest)              returns (LengthReply)   { }  // LLEN
                                                                            // BLPOP
                                                                            // BRPOP
                                                                            // BRPOPLPUSH
  rpc vectorIndex(IndexRequest)                returns (GetValueReply) { }  // LINDEX
  rpc vectorInsert(InsertRequest)              returns (InsertReply)   { }  // LINSERT
  rpc vectorRange(RangeRequest)                returns (RangeReply)    { }  // LRANGE
  rpc vectorRemove(RemoveRequest)              returns (RemoveReply)   { }  // LREM
  rpc vectorSet(SetRequest)                    returns (SetReply)      { }  // LSET
  rpc vectorTrim(TrimRequest)                  returns (TrimReply)     { }  // LTRIM
  rpc vectorExistPushBack(PushRequest)         returns (PushReply)     { }  // RPUSHX

  //////////////////////////////////////////////////////////////

  // DEQUE
  rpc dequePushFront(PushRequest)               returns (PushReply)     { }  // LPUSH
  rpc dequePushBack(PushRequest)                returns (PushReply)     { }  // RPUSH
  rpc dequePopFront(GetValueRequest)            returns (GetValueReply) { }  // LPOP
  rpc dequePopBack(GetValueRequest)             returns (GetValueReply) { }  // RPOP
  rpc dequeLength(LengthRequest)                returns (LengthReply)   { }  // LLEN
                                                                             // BLPOP
                                                                             // BRPOP
                                                                             // BRPOPLPUSH
  rpc dequeIndex(IndexRequest)                  returns (GetValueReply) { }  // LINDEX
  rpc dequeInsert(InsertRequest)                returns (InsertReply)   { }  // LINSERT
  rpc dequeExistPushFront(PushRequest)          returns (PushReply)     { }  // LPUSHX
  rpc dequeRange(RangeRequest)                  returns (RangeReply)    { }  // LRANGE
  rpc dequeRemove(RemoveRequest)                returns (RemoveReply)   { }  // LREM
  rpc dequeSet(SetRequest)                      returns (SetReply)      { }  // LSET
  rpc dequeTrim(TrimRequest)                    returns (TrimReply)     { }  // LTRIM
  rpc dequePopBackPushFront(PopPushRequest)     returns (PopPushReply)  { }  // RPOPLPUSH
  rpc dequeExistPushBack(PushRequest)           returns (PushReply)     { }  // RPUSHX
}

//////////////////////////////////////////////////////

message PushRequest {
  string name            = 1;
  repeated string values = 2;
}

message PushReply {
  ResultInfo info = 1;
  uint64     size = 2;
}

//////////////////////////////////////////////////////

message GetValueRequest {
  string name = 1;
}

message GetValueReply {
  ResultInfo info  = 1;
  string     value = 2;
}

//////////////////////////////////////////////////////

message LengthRequest {
  string name = 1;
}

message LengthReply {
  ResultInfo info  = 1;
  uint64     value = 2;
}

//////////////////////////////////////////////////////

message IndexRequest {
  string name  = 1;
  int64  index = 2;
}

//////////////////////////////////////////////////////

message InsertRequest {
  enum Position {
    BEFORE          = 0;
    AFTER           = 1;
  }

  string   name     = 1;
  Position position = 2;
  string   pivot    = 3;
  string   value    = 4;
}

message InsertReply {
  ResultInfo info  = 1;
  int64      size  = 2;
}

//////////////////////////////////////////////////////

message RangeRequest {
  string name  = 1;
  int64  start = 2;
  int64  stop  = 3;
}

message RangeReply {
  ResultInfo      info   = 1;
  repeated string values = 2;
}

//////////////////////////////////////////////////////

message RemoveRequest {
  string name  = 1;
  int64  count = 2;
  string value = 3;
}

message RemoveReply {
  ResultInfo info    = 1;
  int64      removed = 2;
}

//////////////////////////////////////////////////////

message SetRequest {
  string name  = 1;
  int64  index = 2;
  string value = 3;
}

message SetReply {
  ResultInfo info = 1;
}

//////////////////////////////////////////////////////

message TrimRequest {
  string name  = 1;
  int64  start = 2;
  int64  stop  = 3;
}

message TrimReply {
  ResultInfo info = 1;
}

//////////////////////////////////////////////////////

message PopPushRequest {
  string source_name      = 1;
  string destination_name = 2;
}

message PopPushReply {
  ResultInfo info  = 1;
  string     value = 2;
}
